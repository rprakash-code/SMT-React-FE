     var packages = Newtonsoft.Json.JsonConvert.DeserializeObject<List<Package>>(data);
     var newPackages = new List<object>();

     foreach (var package in packages)
     {
         if (package.u_notes != null)
         {
             //var newArray = new List<object>();
             var newField = package.u_notes?.Split(';').FirstOrDefault(f => f.Trim().Contains("GRAPAC"));
             //newArray.Add(new { ADGroupName = newField });
             string jsonAssignedToArray = package.assigned_to?.ToString() ?? "[]";
             dynamic objAssignedTo = Newtonsoft.Json.JsonConvert.DeserializeObject<dynamic>(jsonAssignedToArray);
             string AssertOwner = objAssignedTo.display_value;

             string jsonOwnedbyArray = package.owned_by?.ToString() ?? "[]";
             dynamic objOwnedby = Newtonsoft.Json.JsonConvert.DeserializeObject<dynamic>(jsonOwnedbyArray);
             string DelegatedAssertOwner = objOwnedby.display_value;

             string Description = package.short_description;


             newPackages.Add(new { package.name, Description, package.sys_id, AssertOwner, DelegatedAssertOwner, package.version, ADGroupName = newField , link = "https://google.com"});
