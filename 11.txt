CREATE TABLE ActiveDirectoryUsers (
    Id INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(255) NOT NULL,
    Mail NVARCHAR(255),
    Description NVARCHAR(255),
    Department NVARCHAR(255),
    SamAccountName NVARCHAR(255) NOT NULL
);



using System;
using System.Collections.Generic;
using System.Data.SqlClient;

public class ActiveDirectoryRepository
{
    private readonly string _connectionString;

    public ActiveDirectoryRepository(string connectionString)
    {
        _connectionString = connectionString;
    }

    public void InsertUsers(List<ActiveDirectoryUser> users)
    {
        using (var connection = new SqlConnection(_connectionString))
        {
            connection.Open();

            foreach (var user in users)
            {
                var query = @"INSERT INTO ActiveDirectoryUsers (Name, Mail, Description, Department, SamAccountName) 
                              VALUES (@Name, @Mail, @Description, @Department, @SamAccountName)";
                using (var command = new SqlCommand(query, connection))
                {
                    command.Parameters.AddWithValue("@Name", user.Name);
                    command.Parameters.AddWithValue("@Mail", (object)user.Mail ?? DBNull.Value);
                    command.Parameters.AddWithValue("@Description", (object)user.Description ?? DBNull.Value);
                    command.Parameters.AddWithValue("@Department", (object)user.Department ?? DBNull.Value);
                    command.Parameters.AddWithValue("@SamAccountName", user.SamAccountName);

                    command.ExecuteNonQuery();
                }
            }
        }
    }
}

var connectionString = "Your Azure SQL Connection String";
var repository = new ActiveDirectoryRepository(connectionString);

var activeDirectoryService = new ActiveDirectoryService("serverName", "ldapBasePath", "username", "password");
var users = activeDirectoryService.GetAllUsers();

repository.InsertUsers(users);

Console.WriteLine("Data inserted successfully.");





public void DeleteUser(string samAccountName)
{
    using (var connection = new SqlConnection(_connectionString))
    {
        connection.Open();

        var query = "DELETE FROM ActiveDirectoryUsers WHERE SamAccountName = @SamAccountName";
        using (var command = new SqlCommand(query, connection))
        {
            command.Parameters.AddWithValue("@SamAccountName", samAccountName);
            command.ExecuteNonQuery();
        }
    }
}



repository.DeleteUser("jdoe");
Console.WriteLine("User deleted successfully.");


